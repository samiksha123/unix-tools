<project name="unix-tools">
    <target name = "clean">
        <delete dir = "unix_tools/build"></delete>
    </target>
    <target name="compile" depends = "clean">
        <mkdir dir="unix_tools/build/classes"></mkdir>
        <javac srcdir="src" destdir="unix_tools/build/classes"></javac>
    </target>
    <target name="test-compile" depends="compile">
        <mkdir dir="unix_tools/build/test-classes"></mkdir>
        <javac srcdir="test" destdir="unix_tools/build/test-classes" classpath="unix_tools/build/classes"></javac>
    </target>
    <target name="run-test" depends="test-compile">
        <java classname="org.junit.runner.JUnitCore"
              classpath="unix_tools/external-lib/junit-4.10.jar;unix_tools/build/classes;unix_tools/build/test-classes">
            <arg value="samiksha.unixtools.CutTest"/>
            <arg value="samiksha.unixtools.HeadTest"/>
            <arg value="samiksha.unixtools.TailTest"/>
            <arg value="samiksha.unixtools.UniqueTest"/>
            <arg value="samiksha.unixtools.ReduceSpaceTest"/>
            <arg value="samiksha.unixtools.SortTest"/>
            <arg value="samiksha.unixtools.WcOperationTest"/>
        </java>
    </target>


    <target name="instrument" depends="run-test">
        <delete file="cobertura.ser"/>
        <delete dir="build/code-coverage/instrumented" />

        <cobertura-instrument todir="build/code-coverage/instrumented">
            <fileset dir="build/classes">
                <include name="**/*.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test-coverage" depends="run-test">
        <junit fork="yes" dir="." failureProperty="test.failed">
            <classpath>
                <pathelement location="build/code-coverage/instrumented"/>
                <pathelement location="build/classes/classes" />
                <pathelement location="build/classes/test-classes" />
                <pathelement location="dependencies/test/junit-4.10.jar"/>
            </classpath>

            <classpath refid= "cobertura.classpath"/>

            <formatter type="xml" />
            <test name="testcase" todir="build/code-coverage/reports/xml" if="testcase" />
            <batchtest todir="build/code-coverage/reports/xml" unless="testcase">
                <fileset dir="test">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="build/code-coverage/reports/xml">
            <fileset dir="build/code-coverage/reports/xml">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="build/code-coverage/reports/html" />
        </junitreport>
    </target>

    <target name="coverage-check">
        <cobertura-check branchrate="34" totallinerate="100" />
    </target>

    <target name="coverage-report">
        <cobertura-report srcdir="src" destdir="build/code-coverage/coverage/xml" format="xml" />
    </target>

    <target name="coverage-report-2">
        <cobertura-report destdir="build/code-coverage/coverage/html">
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>
    <target name="coverage"
            depends="instrument,test-coverage,coverage-report,coverage-report-2"/>

    <target name="createDir" depends="coverage">
        <mkdir dir="unix_tools/lib"></mkdir>
        <mkdir dir="unix_tools/bin"></mkdir>
        <copy file="README.md" todir="unix_tools"/>
    </target>
    <target name="createJar" depends="createDir">
        <jar destfile="unix_tools/lib/unix-tools.jar" basedir="unix_tools/build/classes"></jar>
    </target>
    <target name="moveSH" depends="createJar">
        <copy todir="unix_tools/bin">
            <fileset dir="shFiles"/>
        </copy>
    </target>
    <target name="copyReadme" depends="moveSH">
        <copy file="README.md" todir="unix-tools"></copy>
    </target>
    <target name="dist" depends="copyReadme">
        <zip destfile="unix_tools.zip" basedir="unix_tools"/>
    </target>
</project>